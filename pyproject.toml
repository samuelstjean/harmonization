[build-system]
requires = ["numpy>=2.0",
            "meson-python>=0.15"]
build-backend = "mesonpy"

[project]
name = "dmri-harmonization"
version = '0.2'
authors = [{name = "Samuel St-Jean"}]
description='Implementation of "Harmonization of diffusion MRI datasets with adaptive dictionary learning".'
readme = "README.md"
requires-python = ">=3.9"
license = {text = "GPLv2"}

dependencies = [
    "numpy>=1.23",
    "scipy>=1.8",
    "pyyaml>=5.1",
    "nibabel>=2.4",
    "scikit-learn>=0.21",
    "joblib>=1.3",
    "tqdm>=4.32.2",
    "nlsam>=0.7",
    "autodmri>=0.2.7"
]

[project.scripts]
harmonization_harmonize_my_data = "harmonization.scripts:main_harmonize_my_data"
harmonization_get_global_D = "harmonization.scripts:main_get_global_D"

[project.urls]
homepage = "https://github.com/samuelstjean/harmonization"
changelog = "https://github.com/samuelstjean/harmonization/blob/master/CHANGELOG.md"

[tool.cibuildwheel]
build-frontend = "build"
skip = "pp* *musllinux*"
archs = ["auto64"]
manylinux-x86_64-image = "manylinux_2_28"
test-requires = ['pytest']

test-command = "pytest --pyargs harmonization"
before-all = "pip config set install.prefer-binary true"

[tool.cibuildwheel.windows]
before-build = "pip install delvewheel"
repair-wheel-command = "delvewheel repair -w {dest_dir} {wheel}"
